# Generated by Django 4.0.4 on 2022-05-08 00:52

import cryptofeed_werks.models.aggregated_trades
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GlobalSymbol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
            ],
            options={
                'verbose_name': 'global symbol',
                'verbose_name_plural': 'global symbols',
                'db_table': 'cryptofeed_werks_global_symbol',
            },
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sampling_type', models.CharField(choices=[('time', 'Time'), ('volume', 'Volume'), ('notional', 'Notional'), ('ticks', 'Ticks')], max_length=256, verbose_name='type')),
                ('frequency', models.PositiveIntegerField(verbose_name='frequency')),
            ],
            options={
                'verbose_name': 'series',
                'verbose_name_plural': 'series',
                'db_table': 'cryptofeed_werks_series',
            },
        ),
        migrations.CreateModel(
            name='Symbol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exchange', models.CharField(choices=[('binance', 'Binance'), ('bitfinex', 'Bitfinex'), ('bitflyer', 'bitFlyer'), ('bitmex', 'BitMEX'), ('bybit', 'Bybit'), ('coinbase', 'Coinbase'), ('deribit', 'Deribit'), ('ftx', 'FTX'), ('upbit', 'Upbit')], max_length=255, verbose_name='exchange')),
                ('api_symbol', models.CharField(max_length=255, verbose_name='API symbol')),
                ('min_volume', models.PositiveIntegerField(default=1000, help_text='The minimum volume for significant trades, e.g. 1000', verbose_name='min volume')),
                ('global_symbol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='symbols', to='cryptofeed_werks.globalsymbol')),
            ],
            options={
                'verbose_name': 'symbol',
                'verbose_name_plural': 'symbols',
                'db_table': 'cryptofeed_werks_symbol',
                'ordering': ('exchange', 'api_symbol'),
            },
        ),
        migrations.CreateModel(
            name='SeriesHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True, verbose_name='date')),
                ('data', models.JSONField(default=dict)),
                ('ok', models.BooleanField(db_index=True, default=False, null=True, verbose_name='ok')),
                ('series', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='cryptofeed_werks.series')),
            ],
            options={
                'verbose_name': 'series history',
                'verbose_name_plural': 'series history',
                'db_table': 'cryptofeed_werks_series_history',
                'ordering': ('date',),
            },
        ),
        migrations.AddField(
            model_name='series',
            name='symbol',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='series', to='cryptofeed_werks.symbol'),
        ),
        migrations.CreateModel(
            name='Candle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(db_index=True, verbose_name='timestamp')),
                ('open', models.DecimalField(decimal_places=38, max_digits=76, null=True, verbose_name='open')),
                ('high', models.DecimalField(decimal_places=38, max_digits=76, null=True, verbose_name='high')),
                ('low', models.DecimalField(decimal_places=38, max_digits=76, null=True, verbose_name='low')),
                ('close', models.DecimalField(decimal_places=38, max_digits=76, null=True, verbose_name='close')),
                ('buy_volume', models.DecimalField(decimal_places=38, max_digits=76, null=True, verbose_name='buy volume')),
                ('volume', models.DecimalField(decimal_places=38, max_digits=76, null=True, verbose_name='volume')),
                ('buy_notional', models.DecimalField(decimal_places=38, max_digits=76, null=True, verbose_name='buy notional')),
                ('notional', models.DecimalField(decimal_places=38, max_digits=76, null=True, verbose_name='notional')),
                ('buy_ticks', models.PositiveIntegerField(null=True, verbose_name='buy ticks')),
                ('ticks', models.PositiveIntegerField(null=True, verbose_name='ticks')),
                ('data', models.JSONField(default=dict)),
                ('series', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candles', to='cryptofeed_werks.series')),
            ],
            options={
                'verbose_name': 'candle',
                'verbose_name_plural': 'candles',
                'db_table': 'cryptofeed_werks_candle',
                'ordering': ('timestamp',),
            },
        ),
        migrations.CreateModel(
            name='AggregatedTradeData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(db_index=True, verbose_name='timestamp')),
                ('uid', models.CharField(blank=True, max_length=255, verbose_name='uid')),
                ('data', models.FileField(blank=True, upload_to=cryptofeed_werks.models.aggregated_trades.upload_to, verbose_name='data')),
                ('is_hourly', models.BooleanField(db_index=True, default=False, null=True, verbose_name='hourly')),
                ('ok', models.BooleanField(db_index=True, default=False, null=True, verbose_name='ok')),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candles', to='cryptofeed_werks.symbol')),
            ],
            options={
                'verbose_name': 'aggregated',
                'verbose_name_plural': 'aggregated',
                'db_table': 'cryptofeed_werks_aggregated_trade_data',
                'ordering': ('timestamp',),
            },
        ),
    ]
