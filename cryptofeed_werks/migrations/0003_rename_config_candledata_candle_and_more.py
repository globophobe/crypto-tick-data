# Generated by Django 4.0.5 on 2022-08-11 13:13

import cryptofeed_werks.models.candles
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('cryptofeed_werks', '0002_candledata_remove_serieshistory_series_and_more'),
    ]

    operations = [
        migrations.RenameField(
            model_name='candledata',
            old_name='config',
            new_name='candle',
        ),
        migrations.RemoveField(
            model_name='candle',
            name='sampling_type',
        ),
        migrations.RemoveField(
            model_name='candle',
            name='symbols',
        ),
        migrations.RemoveField(
            model_name='candle',
            name='threshold_type',
        ),
        migrations.RemoveField(
            model_name='candle',
            name='top_n',
        ),
        migrations.RemoveField(
            model_name='candle',
            name='weekly_cache_reset',
        ),
        migrations.AddField(
            model_name='aggregatedtradedata',
            name='exchange_volume',
            field=models.PositiveIntegerField(db_index=True, null=True),
        ),
        migrations.AddField(
            model_name='aggregatedtradedata',
            name='volume',
            field=models.PositiveIntegerField(db_index=True, null=True),
        ),
        migrations.AddField(
            model_name='candle',
            name='cache_reset_frequency',
            field=models.PositiveIntegerField(blank=True, choices=[(1440, 'Daily'), (10080, 'Weekly')], help_text='Not applicable to time-based candles. If not blank, the cache will be reset to 0 at the start of each period. ', null=True, verbose_name='cache reset frequency'),
        ),
        migrations.AddField(
            model_name='candle',
            name='candle_type',
            field=models.CharField(choices=[('time', 'Time'), ('dollar', 'Dollar'), ('volume', 'Volume'), ('tick', 'Tick')], default='', max_length=255, verbose_name='candle type'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='candle',
            name='code_name',
            field=models.SlugField(default='', max_length=255, unique=True, verbose_name='code name'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='candle',
            name='expected_number_of_candles',
            field=models.PositiveIntegerField(blank=True, help_text='Not applicable to time-based candles. The expected number of candles per day for adaptive thresholds.', null=True, verbose_name='expected number of candles'),
        ),
        migrations.AddField(
            model_name='candle',
            name='moving_average_number_of_days',
            field=models.PositiveIntegerField(blank=True, help_text='The number of days for the moving average for adaptive thresholds. ', null=True, verbose_name='moving average number of days'),
        ),
        migrations.AlterField(
            model_name='candle',
            name='is_ema',
            field=models.BooleanField(default=False, help_text='Is the moving average an EMA?', verbose_name='EMA'),
        ),
        migrations.AlterField(
            model_name='candle',
            name='threshold',
            field=models.CharField(blank=True, help_text='For time-based candles, "1d", "4h", "1m", etc. For dollar, volume, or tick candles, a numerical value. Must be blank for candles with an adaptive threshold.', max_length=255, verbose_name='threshold'),
        ),
        migrations.AlterField(
            model_name='candledata',
            name='cache',
            field=models.FileField(blank=True, upload_to=cryptofeed_werks.models.candles.upload_cache_to, verbose_name='data'),
        ),
        migrations.AlterField(
            model_name='globalsymbol',
            name='name',
            field=models.CharField(max_length=255, unique=True, verbose_name='name'),
        ),
        migrations.AlterUniqueTogether(
            name='symbol',
            unique_together={('exchange', 'api_symbol', 'min_volume')},
        ),
        migrations.CreateModel(
            name='CandleSymbol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_from', models.DateTimeField(null=True, verbose_name='date from')),
                ('date_to', models.DateTimeField(null=True, verbose_name='date to')),
                ('candle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cryptofeed_werks.candle', verbose_name='candle')),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cryptofeed_werks.symbol', verbose_name='symbol')),
            ],
            options={
                'verbose_name': 'symbol',
                'verbose_name_plural': 'symbols',
                'db_table': 'cryptofeed_werks_candle_symbol',
            },
        ),
    ]
