# Generated by Django 4.0.5 on 2022-08-14 14:24

import django.db.models.deletion
from django.db import migrations, models

import quant_werks.models.aggregated_trades
import quant_werks.models.candles


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="GlobalSymbol",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=255, unique=True, verbose_name="name"),
                ),
            ],
            options={
                "verbose_name": "global symbol",
                "verbose_name_plural": "global symbols",
                "db_table": "quant_werks_global_symbol",
            },
        ),
        migrations.CreateModel(
            name="Symbol",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "exchange",
                    models.CharField(
                        choices=[
                            ("binance", "Binance"),
                            ("bitfinex", "Bitfinex"),
                            ("bitmex", "BitMEX"),
                            ("bybit", "Bybit"),
                            ("coinbase", "Coinbase"),
                            ("ftx", "FTX"),
                        ],
                        max_length=255,
                        verbose_name="exchange",
                    ),
                ),
                (
                    "api_symbol",
                    models.CharField(max_length=255, verbose_name="API symbol"),
                ),
                (
                    "min_volume",
                    models.PositiveIntegerField(
                        default=1000,
                        help_text="The minimum volume for significant trades, e.g. 1000",
                        verbose_name="min volume",
                    ),
                ),
                (
                    "global_symbol",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="symbols",
                        to="quant_werks.globalsymbol",
                    ),
                ),
            ],
            options={
                "verbose_name": "symbol",
                "verbose_name_plural": "symbols",
                "db_table": "quant_werks_symbol",
                "ordering": ("exchange", "api_symbol"),
                "unique_together": {("exchange", "api_symbol", "min_volume")},
            },
        ),
        migrations.CreateModel(
            name="Candle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_ema",
                    models.BooleanField(
                        default=False,
                        help_text="Is the moving average an EMA?",
                        verbose_name="EMA",
                    ),
                ),
                (
                    "threshold",
                    models.CharField(
                        blank=True,
                        help_text='For time-based candles, "1d", "4h", "1m", etc. For dollar, volume, or tick candles, a numerical value. Must be blank for candles with an adaptive threshold.',
                        max_length=255,
                        verbose_name="threshold",
                    ),
                ),
                (
                    "cache_reset_frequency",
                    models.PositiveIntegerField(
                        blank=True,
                        choices=[(1440, "Day"), (10080, "Week")],
                        help_text="Not applicable to time-based candles. If not blank, the cache will be reset to 0 at the start of each period. ",
                        null=True,
                        verbose_name="cache reset frequency",
                    ),
                ),
                (
                    "candle_type",
                    models.CharField(
                        choices=[
                            ("time", "Time"),
                            ("volume", "Volume"),
                            ("notional", "Notional"),
                            ("ticks", "Ticks"),
                        ],
                        max_length=255,
                        verbose_name="candle type",
                    ),
                ),
                (
                    "code_name",
                    models.SlugField(
                        default="",
                        max_length=255,
                        unique=True,
                        verbose_name="code name",
                    ),
                ),
                (
                    "expected_number_of_candles",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Not applicable to time-based candles. The expected number of candles per day for adaptive thresholds.",
                        null=True,
                        verbose_name="expected number of candles",
                    ),
                ),
                (
                    "moving_average_number_of_days",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="The number of days for the moving average for adaptive thresholds. ",
                        null=True,
                        verbose_name="moving average number of days",
                    ),
                ),
            ],
            options={
                "verbose_name": "candle",
                "verbose_name_plural": "candles",
                "db_table": "quant_werks_candle",
            },
        ),
        migrations.CreateModel(
            name="CandleData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(db_index=True, verbose_name="timestamp"),
                ),
                (
                    "frequency",
                    models.PositiveIntegerField(
                        choices=[
                            (1, "Minute"),
                            (60, "Hour"),
                            (1440, "Day"),
                            (10080, "Week"),
                        ],
                        verbose_name="frequency",
                    ),
                ),
                (
                    "cache",
                    models.FileField(
                        blank=True,
                        upload_to=quant_werks.models.candles.upload_cache_to,
                        verbose_name="data",
                    ),
                ),
                (
                    "data",
                    models.FileField(
                        blank=True,
                        upload_to=quant_werks.models.candles.upload_data_to,
                        verbose_name="data",
                    ),
                ),
                (
                    "candle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="data",
                        to="quant_werks.candle",
                    ),
                ),
                (
                    "symbol",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="data",
                        to="quant_werks.symbol",
                    ),
                ),
            ],
            options={
                "verbose_name": "candle data",
                "verbose_name_plural": "candle data",
                "db_table": "quant_werks_candle_data",
                "ordering": ("timestamp",),
            },
        ),
        migrations.CreateModel(
            name="CandleSymbol",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_from", models.DateField(null=True, verbose_name="date from")),
                ("date_to", models.DateField(null=True, verbose_name="date to")),
                (
                    "candle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="quant_werks.candle",
                        verbose_name="candle",
                    ),
                ),
                (
                    "symbol",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="quant_werks.symbol",
                        verbose_name="symbol",
                    ),
                ),
            ],
            options={
                "verbose_name": "symbol",
                "verbose_name_plural": "symbols",
                "db_table": "quant_werks_candle_symbol",
                "unique_together": {("candle", "symbol")},
            },
        ),
        migrations.CreateModel(
            name="AggregatedTradeData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(db_index=True, verbose_name="timestamp"),
                ),
                (
                    "uid",
                    models.CharField(blank=True, max_length=255, verbose_name="uid"),
                ),
                (
                    "data",
                    models.FileField(
                        blank=True,
                        upload_to=quant_werks.models.aggregated_trades.upload_to,
                        verbose_name="data",
                    ),
                ),
                (
                    "ok",
                    models.BooleanField(
                        db_index=True, default=False, null=True, verbose_name="ok"
                    ),
                ),
                (
                    "symbol",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="aggregated",
                        to="quant_werks.symbol",
                    ),
                ),
                (
                    "frequency",
                    models.PositiveIntegerField(
                        choices=[(1, "Minute"), (60, "Hour")],
                        db_index=True,
                        verbose_name="frequency",
                    ),
                ),
            ],
            options={
                "verbose_name": "aggregated",
                "verbose_name_plural": "aggregated",
                "db_table": "quant_werks_aggregated_trade_data",
                "ordering": ("timestamp",),
            },
        ),
    ]
