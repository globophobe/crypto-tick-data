# Generated by Django 4.1.1 on 2022-10-02 05:56

import django.db.models.deletion
from django.db import migrations, models

import quant_werks.models.aggregated_trades
import quant_werks.models.bars.base
import quant_werks.models.strategies


class Migration(migrations.Migration):

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("quant_werks", "0002_alter_candle_code_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="Bar",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code_name",
                    models.SlugField(
                        max_length=255, unique=True, verbose_name="code name"
                    ),
                ),
                ("date_from", models.DateField(null=True, verbose_name="date from")),
                ("date_to", models.DateField(null=True, verbose_name="date to")),
                ("json_data", models.JSONField(null=True, verbose_name="json data")),
                ("is_active", models.BooleanField(default=True, verbose_name="active")),
                (
                    "content_type",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "verbose_name": "bar",
                "verbose_name_plural": "bars",
                "db_table": "quant_werks_bar",
            },
        ),
        migrations.CreateModel(
            name="BarData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(db_index=True, verbose_name="timestamp"),
                ),
                (
                    "frequency",
                    models.PositiveIntegerField(
                        choices=[
                            (1, "Minute"),
                            (60, "Hour"),
                            (1440, "Day"),
                            (10080, "Week"),
                        ],
                        verbose_name="frequency",
                    ),
                ),
                ("json_data", models.JSONField(null=True, verbose_name="json data")),
                (
                    "file_data",
                    models.FileField(
                        blank=True,
                        upload_to=quant_werks.models.bars.base.upload_data_to,
                        verbose_name="file data",
                    ),
                ),
                ("json_cache", models.JSONField(null=True, verbose_name="json cache")),
                (
                    "file_cache",
                    models.FileField(
                        blank=True,
                        upload_to=quant_werks.models.bars.base.upload_cache_to,
                        verbose_name="file cache",
                    ),
                ),
                (
                    "bar",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="data",
                        to="quant_werks.bar",
                    ),
                ),
            ],
            options={
                "verbose_name": "bar data",
                "verbose_name_plural": "bar data",
                "db_table": "quant_werks_bar_data",
                "ordering": ("timestamp",),
            },
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uid",
                    models.CharField(blank=True, max_length=255, verbose_name="uid"),
                ),
                (
                    "timestamp",
                    models.DateTimeField(db_index=True, verbose_name="timestamp"),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=38, max_digits=76, verbose_name="price"
                    ),
                ),
                (
                    "notional",
                    models.DecimalField(
                        decimal_places=38, max_digits=76, verbose_name="notional"
                    ),
                ),
                ("json_data", models.JSONField(null=True, verbose_name="json data")),
            ],
            options={
                "verbose_name": "order",
                "verbose_name_plural": "orders",
                "db_table": "quant_werks_order",
                "ordering": ("timestamp",),
            },
        ),
        migrations.CreateModel(
            name="Position",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp_from", models.DateTimeField(verbose_name="timestamp from")),
                (
                    "timestamp_to",
                    models.DateField(null=True, verbose_name="timestamp to"),
                ),
                (
                    "realized_pnl",
                    models.DecimalField(
                        decimal_places=38,
                        max_digits=76,
                        null=True,
                        verbose_name="realized PnL",
                    ),
                ),
                ("is_paper", models.BooleanField(default=False, verbose_name="paper")),
                ("is_active", models.BooleanField(default=True, verbose_name="active")),
            ],
            options={
                "verbose_name": "position",
                "verbose_name_plural": "positions",
                "db_table": "quant_werks_position",
            },
        ),
        migrations.CreateModel(
            name="Strategy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code_name",
                    models.SlugField(
                        max_length=255, unique=True, verbose_name="code name"
                    ),
                ),
                (
                    "state",
                    models.CharField(
                        choices=[
                            (1, "paper trade"),
                            (2, "live trade"),
                            (3, "live trade limit out"),
                            (4, "live trade market out"),
                        ],
                        max_length=255,
                        verbose_name="state",
                    ),
                ),
                (
                    "bars",
                    models.ManyToManyField(
                        db_table="quant_werks_strategy_bar",
                        to="quant_werks.bar",
                        verbose_name="bars",
                    ),
                ),
            ],
            options={
                "verbose_name": "strategies",
                "verbose_name_plural": "strategies",
                "db_table": "quant_werks_strategy",
            },
        ),
        migrations.CreateModel(
            name="StrategyData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code_name",
                    models.SlugField(
                        max_length=255, unique=True, verbose_name="code name"
                    ),
                ),
                (
                    "file_data",
                    models.FileField(
                        blank=True,
                        upload_to=quant_werks.models.strategies.upload_to,
                        verbose_name="file data",
                    ),
                ),
                (
                    "strategy",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="data",
                        to="quant_werks.strategy",
                    ),
                ),
            ],
            options={
                "verbose_name": "strategy data",
                "verbose_name_plural": "strategy data",
                "db_table": "quant_werks_strategy_data",
            },
        ),
        migrations.CreateModel(
            name="StrategyLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                (
                    "timestamp",
                    models.DateTimeField(db_index=True, verbose_name="timestamp"),
                ),
                ("json_data", models.JSONField(null=True, verbose_name="json data")),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "strategy",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logs",
                        to="quant_werks.strategy",
                    ),
                ),
            ],
            options={
                "verbose_name": "log",
                "verbose_name_plural": "log",
                "db_table": "quant_werks_strategy_log",
            },
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uid", models.CharField(max_length=255, verbose_name="uid")),
                (
                    "timestamp",
                    models.DateTimeField(db_index=True, verbose_name="timestamp"),
                ),
                (
                    "transaction_type",
                    models.PositiveIntegerField(
                        choices=[(1, "Buy"), (2, "Sell"), (3, "Fee"), (4, "Reward")],
                        verbose_name="type",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=38,
                        max_digits=76,
                        null=True,
                        verbose_name="price",
                    ),
                ),
                (
                    "notional",
                    models.DecimalField(
                        decimal_places=38,
                        max_digits=76,
                        null=True,
                        verbose_name="notional",
                    ),
                ),
                ("json_data", models.JSONField(null=True, verbose_name="json data")),
            ],
            options={
                "verbose_name": "transaction",
                "verbose_name_plural": "transactions",
                "db_table": "quant_werks_transaction",
                "ordering": ("timestamp",),
            },
        ),
        migrations.RemoveField(
            model_name="candledata",
            name="candle",
        ),
        migrations.RemoveField(
            model_name="candledata",
            name="symbol",
        ),
        migrations.AlterUniqueTogether(
            name="candlesymbol",
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name="candlesymbol",
            name="candle",
        ),
        migrations.RemoveField(
            model_name="candlesymbol",
            name="symbol",
        ),
        migrations.AlterModelOptions(
            name="aggregatedtradedata",
            options={
                "ordering": ("timestamp",),
                "verbose_name": "aggregated trade data",
                "verbose_name_plural": "aggregated trade data",
            },
        ),
        migrations.AlterUniqueTogether(
            name="symbol",
            unique_together=set(),
        ),
        migrations.RenameField(
            model_name="aggregatedtradedata",
            old_name="data",
            new_name="file_data",
        ),
        migrations.AlterField(
            model_name="aggregatedtradedata",
            name="file_data",
            field=models.FileField(
                blank=True,
                upload_to=quant_werks.models.aggregated_trades.upload_data_to,
                verbose_name="file data",
            ),
        ),
        migrations.AddField(
            model_name="aggregatedtradedata",
            name="json_data",
            field=models.JSONField(null=True, verbose_name="json data"),
        ),
        migrations.AddField(
            model_name="globalsymbol",
            name="notional",
            field=models.DecimalField(
                blank=True,
                decimal_places=38,
                max_digits=76,
                null=True,
                verbose_name="notional",
            ),
        ),
        migrations.AddField(
            model_name="symbol",
            name="should_aggregate_trades",
            field=models.BooleanField(
                default=False,
                help_text="Should trades be aggregated?",
                verbose_name="aggregate trades",
            ),
        ),
        migrations.RenameField(
            model_name="symbol",
            old_name="min_volume",
            new_name="significant_trade_filter",
        ),
        migrations.AlterField(
            model_name="symbol",
            name="significant_trade_filter",
            field=models.PositiveIntegerField(
                default=0,
                help_text="If trades are aggregated, they can be further filtered according to the algorithm described in the documentation.",
                verbose_name="significant trade filter",
            ),
        ),
        migrations.AddField(
            model_name="symbol",
            name="symbol_type",
            field=models.CharField(
                choices=[("spot", "spot"), ("perp", "perp"), ("future", "future")],
                default="spot",
                max_length=255,
                verbose_name="type",
            ),
            preserve_default=False,
        ),
        migrations.AlterUniqueTogether(
            name="symbol",
            unique_together={
                (
                    "exchange",
                    "api_symbol",
                    "should_aggregate_trades",
                    "significant_trade_filter",
                )
            },
        ),
        migrations.DeleteModel(
            name="Candle",
        ),
        migrations.DeleteModel(
            name="CandleData",
        ),
        migrations.DeleteModel(
            name="CandleSymbol",
        ),
        migrations.AddField(
            model_name="transaction",
            name="asset",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="transactions",
                to="quant_werks.globalsymbol",
                verbose_name="asset",
            ),
        ),
        migrations.AddField(
            model_name="transaction",
            name="order",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="transactions",
                to="quant_werks.order",
            ),
        ),
        migrations.AddField(
            model_name="transaction",
            name="position",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="transactions",
                to="quant_werks.position",
            ),
        ),
        migrations.AddField(
            model_name="position",
            name="strategy",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="positions",
                to="quant_werks.strategy",
            ),
        ),
        migrations.AddField(
            model_name="position",
            name="symbol",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="positions",
                to="quant_werks.symbol",
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="position",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="orders",
                to="quant_werks.position",
            ),
        ),
        migrations.AddField(
            model_name="bar",
            name="symbols",
            field=models.ManyToManyField(
                db_table="quant_werks_bar_symbol",
                to="quant_werks.symbol",
                verbose_name="symbols",
            ),
        ),
        migrations.CreateModel(
            name="AdaptiveBar",
            fields=[],
            options={
                "verbose_name": "adaptive bar",
                "verbose_name_plural": "adaptive bars",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("quant_werks.bar",),
        ),
        migrations.CreateModel(
            name="ConstantBar",
            fields=[],
            options={
                "verbose_name": "constant bar",
                "verbose_name_plural": "constant bars",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("quant_werks.bar",),
        ),
        migrations.CreateModel(
            name="ImbalanceBar",
            fields=[],
            options={
                "verbose_name": "imbalance bar",
                "verbose_name_plural": "imbalance bars",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("quant_werks.bar",),
        ),
        migrations.CreateModel(
            name="RunBar",
            fields=[],
            options={
                "verbose_name": "run bar",
                "verbose_name_plural": "run bars",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("quant_werks.bar",),
        ),
    ]
